// Import the createSlice function from @reduxjs/toolkit to create a Redux slice
import { createSlice } from '@reduxjs/toolkit';

// Define the initial state for the chat slice
const initialState = {
  showcard: true, // Indicates whether the introductory card is visible
  query: '', // Holds the current user query/input
  typing: false, // Indicates whether the bot is currently typing a response
  error: false, // Indicates if an error has occurred
  messages: [], // Array to store chat messages
  showprompt: true, // Indicates whether to show the prompt list
  showclearcard: false, // Indicates whether to show the clear chat confirmation card
};

// Create a Redux slice named 'chat' with the initial state and reducers
const chatSlice = createSlice({
  name: 'chat', // Name of the slice
  initialState, // Initial state object
  reducers: {
    // Reducer to set the visibility of the introductory card
    setshowCard: (state, action) => {
      state.showcard = action.payload;
    },
    // Reducer to update the user query
    setQuery: (state, action) => {
      state.query = action.payload;
    },
    // Reducer to set the typing state
    setTyping: (state, action) => {
      state.typing = action.payload;
    },
    // Reducer to set the error state
    setError: (state, action) => {
      state.error = action.payload;
    },
    // Reducer to add a new message to the messages array
    addMessage: (state, action) => {
      state.messages.push(action.payload);
    },
    // Reducer to clear all messages from the messages array
    clearMessage: (state) => {
      state.messages = initialState.messages;
    },
    // Reducer to reset the user query to an empty string
    resetQuery: (state) => {
      state.query = '';
    },
    // Reducer to set the visibility of the prompt list
    setshowPrompt: (state, action) => {
      state.showprompt = action.payload;
    },
    // Reducer to set the visibility of the clear chat confirmation card
    setshowClearcard: (state, action) => {
      state.showclearcard = action.payload;
    },
  },
});

// Export action creators generated by createSlice
export const {
  setshowCard,
  setQuery,
  setTyping,
  setError,
  addMessage,
  clearMessage,
  resetQuery,
  setshowPrompt,
  setshowClearcard,
} = chatSlice.actions;

// Export the reducer to be used in the Redux store
export default chatSlice.reducer;
